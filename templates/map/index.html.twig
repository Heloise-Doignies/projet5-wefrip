{% extends 'base.html.twig' %}

{% block title %}La carte interactive{% endblock %}

{% block body %}
{# Code HTML pour la carte et les fonctionnalités #}
<h1 class="text-center">Tous les événements près de chez vous</h1>
    
<div id="zoneCarteEvent" class="container d-flex flex-row w-100 my-3 align-items-center justify-content-center">
    {# Affichage de la carte #}
    <div id="zoneCarte" class="col-md-12">
        <div id="maCarte" class="m-0 rounded border"></div> 
    </div>
</div>
{# On crée le formulaire pour ajouter un marqueur #}
    {# <form action="{{ path('create_newEvent') }}" method="post">
        <label for="latitude">Latitude :</label>
        <input type="text" id="latitude" name="latitude" required><br>

        <label for="longitude">Longitude :</label>
        <input type="text" id="longitude" name="longitude" required><br>

        <label for="title">Titre :</label>
        <input type="text" id="title" name="title" required><br>

        <button type="submit">Ajouter le marqueur</button>
    </form> #}


{# Script pour la carte #}
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script> {#script à mettre avant l'import de la carte#}

<script>
// On initialise la map
var carte = L.map('maCarte').setView([48.866667, 2.333333], 12);
// On charge des tuiles (on pourra changer ici le fond de la carte)
L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    // Lien vers la source des données
    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
    minZoom: 1,
    maxZoom: 18,
}).addTo(carte);

//On initialise les icones avec des filtres pour atelier et événement
//A FAIRE

//On affiche le contenu au clic sur un marqueur d'événement
    function onMarkerClick(e) {
        var marker = e.target;
        // Vérifier si la div d'informations existe déjà
        var eventInfo = document.getElementById('eventInfo');
        if (eventInfo) {
            // Si la div existe, la supprimer
            eventInfo.parentNode.removeChild(eventInfo);
        }

        // Créer une nouvelle div d'informations
        eventInfo = document.createElement('div');
        eventInfo.id = 'eventInfo';
        eventInfo.className = 'col-md-4';

        //Modifier la div de la carte 
        var zoneCarte = document.getElementById('zoneCarte');
        zoneCarte.classList.remove('col-md-12');
        zoneCarte.classList.add('col-md-8');

        //Contenu à afficher quand on clique sur un marqueur
        eventInfo.innerHTML = 
                '<div class="card-body text-center px-3 d-flex align-items-center justify-content-center flex-column h-100 rounded border">' +
                    '<h5 class="card-title">' + marker.options.eventName + ' - ' + marker.options.userCreator + '</h5>' +
                    '<p class="card-text">' + marker.options.typeEvent + '</p>' +
                    '<p class="card-text">' + marker.options.eventDate + '</p>' +
                    '<p class="card-text">Description : ' + marker.options.eventDescription + '</p>' +
                    '<p class="card-text">Taille(s) disponible(s) : </p>' +
                    '<p class="card-text">Genre(s) : </p>' +
                    '<a href="#" class="btn btn-warning">Je participe</a>' +
                '</div>';

        // Insérer la nouvelle div d'informations dans le conteneur approprié
        var zoneCarteEvent = document.getElementById('zoneCarteEvent');
        zoneCarteEvent.insertBefore(eventInfo, zoneCarteEvent.firstChild);
    }

    //Fonction pour créer des marqueurs


    //On affiche les marqueurs au chargement de la page
    {% for event in events %}
        var marker = L.marker([{{ event.coordinateLat }}, {{ event.coordinateLng }}], {
            eventName: '{{ event.eventName }}',
            userCreator: '{{ event.userCreator }}',
            typeEvent: '{{ event.typeEvent }}',
            eventDate: '{{ event.eventDate.format('d/m/Y H:i') }}',
            eventDescription: '{{ event.eventDescription }}'
        })
            .addTo(carte)
            .bindPopup("{{ event.eventName }}")
            .on('click', onMarkerClick);
    {% endfor %}

</script>
{% endblock %}

